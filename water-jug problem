from collections import deque

def water_jug_bfs():
    visited = set()
    queue = deque()
    queue.append((0, 0))  # Initial state: both jugs empty

    while queue:
        a, b = queue.popleft()
        if (a, b) in visited:
            continue
        visited.add((a, b))

        print(f"Jug1: {a}L, Jug2: {b}L")

        if a == 2 or b == 2:
            print("\nGoal reached!")
            return

        # Possible operations
        possible_states = [
            (4, b),      # Fill Jug1
            (a, 3),      # Fill Jug2
            (0, b),      # Empty Jug1
            (a, 0),      # Empty Jug2
            (min(a + b, 4), b - (min(a + b, 4) - a)),  # Pour Jug2 -> Jug1
            (a - (min(a + b, 3) - b), min(a + b, 3)),  # Pour Jug1 -> Jug2
        ]

        for state in possible_states:
            if state not in visited:
                queue.append(state)

water_jug_bfs()
